name: deploy
on:
  push:
    branches:
      - main
jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install unplugged dependencies
        run: yarn install
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: |
          echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" >> .env
          echo "NEXT_PUBLIC_KAKAO_LOGIN=${{ secrets.NEXT_PUBLIC_KAKAO_LOGIN }}" >> .env
          echo "NEXT_PUBLIC_GOOGLE_LOGIN=${{ secrets.NEXT_PUBLIC_GOOGLE_LOGIN }}" >> .env
          echo "NEXT_PUBLIC_NAVER_LOGIN=${{ secrets.NEXT_PUBLIC_NAVER_LOGIN }}" >> .env
          echo "DATA_SERVER=${{ secrets.DATA_SERVER }}" >> .env
          echo "NEXT_PUBLIC_REMOTE_IMAGE_URL=${{ secrets.NEXT_PUBLIC_REMOTE_IMAGE_URL }}" >> .env
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/meca_front:latest -f Dockerfile . --platform linux/x86_64 && docker push ${{ secrets.DOCKERHUB_USERNAME }}/meca_front:latest
  cd-pipeline:
    needs: build-image
    name: cd
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_NAME }}
          key: ${{ secrets.PROD_SSH_KEY }}
          port: ${{ secrets.PROD_PORT }}
          script: 'sudo docker-compose pull && sudo docker-compose up -d'
